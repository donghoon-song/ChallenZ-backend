service: rest-api

provider:
  name: aws
  runtime: nodejs12.x # set node.js runtime
  memorySize: 128 # set the maximum memory of the Lambdas in Megabytes
  timeout: 10 # the timeout is 10 seconds (default is 6 seconds)
  stage: dev # setting the env stage to dev, this will be visible in the routes
  region: ap-northeast-2

functions: # add 4 functions for CRUD
  createAvatar:
    handler: handler.createAvatar # point to exported create function in handler.js
    events:
      - http:
          path: avatar # path will be domain.name.com/dev/notes
          method: post
          cors: true
  getAvatar:
    handler: handler.getAvatar # point to exported create function in handler.js
    events:
      - http:
          path: avatar/{id} # path will be domain.name.com/dev/notes
          method: get
          cors: true
  getAvatarList:
    handler: handler.getAvatarList # point to exported create function in handler.js
    events:
      - http:
          path: avatarList # path will be domain.name.com/dev/notes
          method: get
          cors: true
  createChallenge:
    handler: handler.createChallenge # point to exported create function in handler.js
    events:
      - http:
          path: challenge # path will be domain.name.com/dev/notes
          method: post
          cors: true
  getChallenge:
    handler: handler.getChallenge # point to exported create function in handler.js
    events:
      - http:
          path: challenge/{id} # path will be domain.name.com/dev/notes
          method: get
          cors: true
  getChallengeList:
    handler: handler.getChallengeList # point to exported create function in handler.js
    events:
      - http:
          path: challengeList # path will be domain.name.com/dev/notes
          method: get
          cors: true
  createMessageTrigger:
    handler: handler.createMessageTrigger # point to exported create function in handler.js
    events:
      - http:
          path: messageTrigger # path will be domain.name.com/dev/notes
          method: post
          cors: true
  getMessageTrigger:
    handler: handler.getMessageTrigger # point to exported create function in handler.js
    events:
      - http:
          path: messageTrigger # path will be domain.name.com/dev/notes
          method: get
          cors: true
  getMessageTriggerList:
    handler: handler.getMessageTriggerList # point to exported create function in handler.js
    events:
      - http:
          path: messageTriggerList # path will be domain.name.com/dev/notes
          method: get
          cors: true
  createMessage:
    handler: handler.createMessage # point to exported create function in handler.js
    events:
      - http:
          path: message # path will be domain.name.com/dev/notes
          method: post
          cors: true
  getMessageList:
    handler: handler.getMessageList # point to exported create function in handler.js
    events:
      - http:
          path: messageList/{challengeId} # path will be domain.name.com/dev/notes
          method: get
          cors: true
  getTriggerList:
    handler: handler.getTriggerList # point to exported create function in handler.js
    events:
      - http:
          path: triggerList/{challengeId} # path will be domain.name.com/dev/notes
          method: get
          cors: true
plugins:
  - serverless-offline # adding the plugin to be able to run the offline emulation
